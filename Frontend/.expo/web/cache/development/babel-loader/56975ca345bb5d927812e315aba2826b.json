{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport * as Location from \"expo-location\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CurrentLocation = function CurrentLocation(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    location = _useState2[0],\n    setLocation = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    errorMsg = _useState4[0],\n    setErrorMsg = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    longitude = _useState6[0],\n    setlongitude = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    latitude = _useState8[0],\n    setlatitude = _useState8[1];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n        status = _yield$Location$reque.status;\n      if (status !== \"granted\") {\n        setErrorMsg(\"Permission to access location was denied\");\n        return;\n      }\n      var location = yield Location.getCurrentPositionAsync({});\n      setLocation(location);\n      setlongitude(location.coords.longitude);\n      setlatitude(location.coords.latitude);\n    })();\n  }, []);\n  console.log(location);\n  var text = \"Waiting..\";\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n  console.log(text);\n  return _jsxs(View, {\n    children: [_jsxs(Text, {\n      children: [\"Latitude: \", latitude]\n    }), _jsxs(Text, {\n      children: [\"Longitude: \", longitude]\n    })]\n  });\n};\nexport default CurrentLocation;","map":{"version":3,"names":["React","useState","useEffect","Location","CurrentLocation","navigation","location","setLocation","errorMsg","setErrorMsg","longitude","setlongitude","latitude","setlatitude","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","coords","console","log","text","JSON","stringify"],"sources":["E:/fyp/Git/GroundWork/screens/CurrentLocation.js"],"sourcesContent":["//import React from \"react\";\r\n//import Geolocation from \"@react-native-community/geolocation\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  Button,\r\n  PermissionsAndroid,\r\n} from \"react-native\";\r\n//import Geolocation from \"react-native-geolocation-service\";\r\nimport * as Location from \"expo-location\";\r\n\r\nconst CurrentLocation = ({ navigation }) => {\r\n  const [location, setLocation] = useState(null);\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n  const [longitude, setlongitude] = useState(null);\r\n  const [latitude, setlatitude] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let { status } = await Location.requestForegroundPermissionsAsync();\r\n      if (status !== \"granted\") {\r\n        setErrorMsg(\"Permission to access location was denied\");\r\n        return;\r\n      }\r\n\r\n      let location = await Location.getCurrentPositionAsync({});\r\n      setLocation(location);\r\n      setlongitude(location.coords.longitude);\r\n      setlatitude(location.coords.latitude);\r\n\r\n      //  console.log(location.coords.);\r\n    })();\r\n  }, []);\r\n  console.log(location);\r\n  let text = \"Waiting..\";\r\n  if (errorMsg) {\r\n    text = errorMsg;\r\n  } else if (location) {\r\n    text = JSON.stringify(location);\r\n  }\r\n  console.log(text);\r\n  return (\r\n    <View>\r\n      <Text>Latitude: {latitude}</Text>\r\n      <Text>Longitude: {longitude}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CurrentLocation;\r\n"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AASnD,OAAO,KAAKC,QAAQ,MAAM,eAAe;AAAC;AAE1C,IAAMC,eAAe,GAAG,SAAlBA,eAAe,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EACnC,gBAAgCJ,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAvCK,QAAQ;IAAEC,WAAW;EAC5B,iBAAgCN,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAvCO,QAAQ;IAAEC,WAAW;EAC5B,iBAAkCR,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAzCS,SAAS;IAAEC,YAAY;EAC9B,iBAAgCV,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAvCW,QAAQ;IAAEC,WAAW;EAE5BX,SAAS,CAAC,YAAM;IACd,kBAAC,aAAY;MACX,kCAAuBC,QAAQ,CAACW,iCAAiC,EAAE;QAA7DC,MAAM,yBAANA,MAAM;MACZ,IAAIA,MAAM,KAAK,SAAS,EAAE;QACxBN,WAAW,CAAC,0CAA0C,CAAC;QACvD;MACF;MAEA,IAAIH,QAAQ,SAASH,QAAQ,CAACa,uBAAuB,CAAC,CAAC,CAAC,CAAC;MACzDT,WAAW,CAACD,QAAQ,CAAC;MACrBK,YAAY,CAACL,QAAQ,CAACW,MAAM,CAACP,SAAS,CAAC;MACvCG,WAAW,CAACP,QAAQ,CAACW,MAAM,CAACL,QAAQ,CAAC;IAGvC,CAAC,GAAG;EACN,CAAC,EAAE,EAAE,CAAC;EACNM,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;EACrB,IAAIc,IAAI,GAAG,WAAW;EACtB,IAAIZ,QAAQ,EAAE;IACZY,IAAI,GAAGZ,QAAQ;EACjB,CAAC,MAAM,IAAIF,QAAQ,EAAE;IACnBc,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAChB,QAAQ,CAAC;EACjC;EACAY,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;EACjB,OACE,MAAC,IAAI;IAAA,WACH,MAAC,IAAI;MAAA,yBAAYR,QAAQ;IAAA,EAAQ,EACjC,MAAC,IAAI;MAAA,0BAAaF,SAAS;IAAA,EAAQ;EAAA,EAC9B;AAEX,CAAC;AAED,eAAeN,eAAe"},"metadata":{},"sourceType":"module"}